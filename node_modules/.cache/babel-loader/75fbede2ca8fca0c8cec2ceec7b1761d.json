{"ast":null,"code":"import _objectSpread from\"/srv/http/boskyle.com/public_html/projects/covid19-tracker-canada/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"/srv/http/boskyle.com/public_html/projects/covid19-tracker-canada/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/srv/http/boskyle.com/public_html/projects/covid19-tracker-canada/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/srv/http/boskyle.com/public_html/projects/covid19-tracker-canada/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/srv/http/boskyle.com/public_html/projects/covid19-tracker-canada/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/srv/http/boskyle.com/public_html/projects/covid19-tracker-canada/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{Component}from'react';import'./super.css';import{FormControl,FormLabel,FormGroup,FormControlLabel,RadioGroup,Radio,NativeSelect}from'@material-ui/core';import MomentUtils from'@date-io/moment';import{MuiPickersUtilsProvider,DatePicker}from\"@material-ui/pickers\";import ProvinceInformation from'./classes/ProvinceInformation';import ProvinceLeaderboard from'./components/ProvinceLeaderboard';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Super=/*#__PURE__*/function(_Component){_inherits(Super,_Component);var _super=_createSuper(Super);function Super(props){var _this;_classCallCheck(this,Super);_this=_super.call(this,props);_this.handleChange=function(e){var board=_objectSpread({},_this.state.board);board.option_one=e.target.value;_this.setState({board:board});};_this.handleProvinceChange=function(e){// const name = e.target.name;     \nvar board=_objectSpread({},_this.state.board);board.province=e.target.value;_this.setState({board:board});};_this.goToYesterday=function(today){var yesterday=new Date(today);yesterday.setDate(yesterday.getDate()-1);return yesterday;};_this.state={board:{option_one:'daily',province:'alberta',date:_this.goToYesterday(new Date())},information:{covidInfo:{cases:'not avaiable yet...',cumulative_cases:'not avaiable yet...',date_report:'not avaiable yet...',province:'not avaiable yet...'},provInfo:'',retDate:''},leaderboard:[]};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleProvinceChange=_this.handleProvinceChange.bind(_assertThisInitialized(_this));return _this;}_createClass(Super,[{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;console.log('i will be invoked before render');var foo2=new ProvinceInformation();foo2.getLeaderboard(this.state.board.date,this.state.board.option_one).then(function(response){/*\n            x is an array of responses to be fetched..\n            pipe the response to be json object so I can extract data..\n            */var leaderboard=_objectSpread({},_this2.state.leaderboard);var promiseArray=[];// an array of responses\nresponse.map(function(responseObject,index){//  push all the promises to an array and then consume it using promise.all  \npromiseArray.push(responseObject.json());});// end of response.map\nPromise.all(promiseArray).then(function(values){// values is an object array (based of all territories/provinces ON daily,weekly, and monthly)\n// each object element will contain an array of cases based ON daily, weekly, and monthly\n// array of data objects depending on daily. weekly and mponthly\nvar provArray=values.map(function(dataObject){var cases_sum=0;var name='';dataObject.cases.map(function(data){cases_sum+=data.cases;name=data.province;});return{name:name,cases_sum:cases_sum};});provArray.sort(function(a,b){return b.cases_sum-a.cases_sum;}).map(function(data,index){console.table(index+1,data);});leaderboard=provArray;_this2.setState({leaderboard:leaderboard});});});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;console.log('Super mounted.');// have a onMount date format for render visual \nvar foo2=new ProvinceInformation();foo2.getData(this.state.board.province,this.state.board.date,this.state.board.option_one).then(function(data){var covidInfo=data.covidInfo,provInfo=data.provInfo,myDate=data.myDate;var information=_objectSpread({},_this3.state.information);if(covidInfo.cases[0]!==undefined){information.covidInfo=covidInfo.cases[0];}information.provInfo=provInfo;information.retDate=myDate;_this3.setState({information:information});// get initial date format    \n});// get leaderboard.. first mount\n}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){console.log('Super unmounted.');}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var _this4=this;console.log('Super updated.');var foo2=new ProvinceInformation();foo2.getData(this.state.board.province,this.state.board.date,this.state.board.option_one).then(function(data){// if prev state board not the same as current\n// => no changes are occuring unless there is!\nif(!Object.is(prevState.board,_this4.state.board)){var covidInfo=data.covidInfo,provInfo=data.provInfo,myDate=data.myDate;var information=_objectSpread({},_this4.state.information);if(covidInfo.cases[0]!==undefined){information.covidInfo=covidInfo.cases[0];/*map through array of cases if weekly / monthly then sum it up*/if(_this4.state.board.option_one===\"weekly\"||_this4.state.board.option_one===\"monthly\"){var sum=0;covidInfo.cases.map(function(obj){sum+=obj.cases;});information.covidInfo.cases=sum;console.log(sum);}}else{information.covidInfo.cases=information.covidInfo.cumulative_cases=information.covidInfo.date_report=information.covidInfo.province=\"not avaiable yet...\";}information.provInfo=provInfo;information.retDate=myDate;_this4.setState({information:information});}});foo2.getLeaderboard(this.state.board.date,this.state.board.option_one).then(function(response){if(!Object.is(prevState.board,_this4.state.board)){/*\n                x is an array of responses to be fetched..\n                pipe the response to be json object so I can extract data..\n                */var leaderboard=_objectSpread({},_this4.state.leaderboard);var promiseArray=[];// an array of responses\nresponse.map(function(responseObject,index){//  push all the promises to an array and then consume it using promise.all  \npromiseArray.push(responseObject.json());});// end of response.map\nPromise.all(promiseArray).then(function(values){// values is an object array (based of all territories/provinces ON daily,weekly, and monthly)\n// each object element will contain an array of cases based ON daily, weekly, and monthly\n// array of data objects depending on daily. weekly and mponthly\nvar provArray=values.map(function(dataObject){var cases_sum=0;var name='';dataObject.cases.map(function(data){cases_sum+=data.cases;name=data.province;});return{name:name,cases_sum:cases_sum};});provArray.sort(function(a,b){return b.cases_sum-a.cases_sum;}).map(function(data,index){// console.table(index+1,data);\n});leaderboard=provArray;_this4.setState({leaderboard:leaderboard});});}});}},{key:\"render\",value:function render(){var _this5=this;return/*#__PURE__*/_jsx(\"div\",{className:\"mainContainer containerFluid\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row no-gutters h-100\",style:{overflow:'auto'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-0  col-xl-3 d-flex flex-column align-items-center justify-content-center first-column p-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard  w-100 h-75 card\",style:{backgroundColor:'#6C8AD7'},children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mt-5 text-center\",children:\"Control Board\"}),/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"mt-5\",children:[/*#__PURE__*/_jsx(FormLabel,{component:\"legend\",children:\"Province/Territory\"}),/*#__PURE__*/_jsxs(NativeSelect,{value:this.state.board.province,onChange:this.handleProvinceChange,inputProps:{name:'province'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"alberta\",children:\"Alberta\"}),/*#__PURE__*/_jsx(\"option\",{value:\"british-columbia\",children:\"British Columbia\"}),/*#__PURE__*/_jsx(\"option\",{value:\"manitoba\",children:\"Manitoba\"}),/*#__PURE__*/_jsx(\"option\",{value:\"new-brunswick\",children:\"New Brunswick\"}),/*#__PURE__*/_jsx(\"option\",{value:\"new-foundland-and-labrador\",children:\"Newfoundland and Labrador\"}),/*#__PURE__*/_jsx(\"option\",{value:\"northwest-territories\",children:\"Northwest Territories\"}),/*#__PURE__*/_jsx(\"option\",{value:\"nova-scotia\",children:\"Nova Scotia\"}),/*#__PURE__*/_jsx(\"option\",{value:\"nunavut\",children:\"Nunavut\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ontario\",children:\"Ontario\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pei\",children:\"Prince Edward Island\"}),/*#__PURE__*/_jsx(\"option\",{value:\"quebec\",children:\"Quebec\"}),/*#__PURE__*/_jsx(\"option\",{value:\"saskatchewan\",children:\"Saskatchewan\"}),/*#__PURE__*/_jsx(\"option\",{value:\"yukon\",children:\"Yukon\"})]})]}),/*#__PURE__*/_jsxs(FormGroup,{className:\"mt-5 p-1\",children:[/*#__PURE__*/_jsx(FormLabel,{component:\"legend\",children:\"Option\"}),/*#__PURE__*/_jsxs(RadioGroup,{defaultValue:\"daily\",value:this.state.option_one,onChange:this.handleChange,className:\"w-100 d-flex flex-row justify-content-center\",children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"daily\",control:/*#__PURE__*/_jsx(Radio,{color:\"primary\"}),label:\"Daily\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"weekly\",control:/*#__PURE__*/_jsx(Radio,{color:\"primary\"}),label:\"Weekly\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"monthly\",control:/*#__PURE__*/_jsx(Radio,{color:\"primary\"}),label:\"Monthly\"})]})]}),/*#__PURE__*/_jsx(FormGroup,{className:\"p-1\",children:/*#__PURE__*/_jsx(MuiPickersUtilsProvider,{utils:MomentUtils,children:/*#__PURE__*/_jsx(DatePicker,{variant:\"inline\",label:\"Date\",value:this.state.board.date,onChange:function onChange(newVal){var board=_objectSpread({},_this5.state.board);board.date=moment(newVal).format('YYYY-MM-DD');_this5.setState({board:board});}})})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-12 col-xl-9  d-flex flex-column align-items-center justify-content-center second-column\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mapContainer d-flex flex-column align-items-center card mb-2\",style:{backgroundColor:'#6C8AD7'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"row no-gutters h-100 w-100 p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3 d-flex flex-column align-items-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-100 w-100 card leaderboardWrapper text-center d-flex flex-column align-items-center\",children:/*#__PURE__*/_jsx(ProvinceLeaderboard,{board:this.state.board,leaderboard:this.state.leaderboard})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-9 p-3 d-flex flex-column  align-items-center justify-content-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-5 text-center card covidWrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"display\",children:this.state.information.provInfo.name}),/*#__PURE__*/_jsx(\"h2\",{children:this.state.information.retDate}),/*#__PURE__*/_jsxs(\"h2\",{children:[this.state.board.option_one,\" cases:  \",this.state.information.covidInfo.cases]})]})})]})})})]})});}}]);return Super;}(Component);export default Super;","map":{"version":3,"sources":["/srv/http/boskyle.com/public_html/projects/covid19-tracker-canada/src/components/Super/Super.js"],"names":["Component","FormControl","FormLabel","FormGroup","FormControlLabel","RadioGroup","Radio","NativeSelect","MomentUtils","MuiPickersUtilsProvider","DatePicker","ProvinceInformation","ProvinceLeaderboard","moment","Super","props","handleChange","e","board","state","option_one","target","value","setState","handleProvinceChange","province","goToYesterday","today","yesterday","Date","setDate","getDate","date","information","covidInfo","cases","cumulative_cases","date_report","provInfo","retDate","leaderboard","bind","console","log","foo2","getLeaderboard","then","response","promiseArray","map","responseObject","index","push","json","Promise","all","values","provArray","dataObject","cases_sum","name","data","sort","a","b","table","getData","myDate","undefined","prevProps","prevState","Object","is","sum","obj","overflow","backgroundColor","newVal","format"],"mappings":"y4BAAA,OAAQA,SAAR,KAAwB,OAAxB,CACA,MAAO,aAAP,CACA,OAAQC,WAAR,CAAoBC,SAApB,CAA8BC,SAA9B,CAAwCC,gBAAxC,CAAyDC,UAAzD,CAAoEC,KAApE,CAA0EC,YAA1E,KAA6F,mBAA7F,CACA,MAAOC,CAAAA,WAAP,KAAwB,iBAAxB,CACA,OAAQC,uBAAR,CAAgCC,UAAhC,KAAiD,sBAAjD,CACA,MAAOC,CAAAA,mBAAP,KAAgC,+BAAhC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,kCAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,C,2FACMC,CAAAA,K,8FAGF,eAAYC,KAAZ,CAAmB,uCACf,uBAAMA,KAAN,EADe,MA0BnBC,YA1BmB,CA0BJ,SAAAC,CAAC,CAAI,CAChB,GAAIC,CAAAA,KAAK,kBAAO,MAAKC,KAAL,CAAWD,KAAlB,CAAT,CACAA,KAAK,CAACE,UAAN,CAAmBH,CAAC,CAACI,MAAF,CAASC,KAA5B,CACA,MAAKC,QAAL,CAAc,CAACL,KAAK,CAALA,KAAD,CAAd,EACH,CA9BkB,OA+BnBM,oBA/BmB,CA+BI,SAAAP,CAAC,CAAI,CACxB;AACA,GAAIC,CAAAA,KAAK,kBAAO,MAAKC,KAAL,CAAWD,KAAlB,CAAT,CACAA,KAAK,CAACO,QAAN,CAAkBR,CAAC,CAACI,MAAF,CAASC,KAA3B,CACA,MAAKC,QAAL,CAAc,CAACL,KAAK,CAALA,KAAD,CAAd,EACH,CApCkB,OAsCnBQ,aAtCmB,CAsCH,SAACC,KAAD,CAAW,CAEvB,GAAIC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAJ,CAASF,KAAT,CAAhB,CACAC,SAAS,CAACE,OAAV,CAAkBF,SAAS,CAACG,OAAV,GAAsB,CAAxC,EACA,MAAOH,CAAAA,SAAP,CACH,CA3CkB,CAEf,MAAKT,KAAL,CAAa,CACTD,KAAK,CAAG,CAAKE,UAAU,CAAE,OAAjB,CACKK,QAAQ,CAAC,SADd,CAEKO,IAAI,CAAC,MAAKN,aAAL,CAAmB,GAAIG,CAAAA,IAAJ,EAAnB,CAFV,CADC,CAKTI,WAAW,CAAE,CACTC,SAAS,CAAG,CACRC,KAAK,CAAE,qBADC,CAERC,gBAAgB,CAAE,qBAFV,CAGRC,WAAW,CAAE,qBAHL,CAIRZ,QAAQ,CAAE,qBAJF,CADH,CAOTa,QAAQ,CAAE,EAPD,CAQTC,OAAO,CAAE,EARA,CALJ,CAeTC,WAAW,CAAC,EAfH,CAAb,CAkBA,MAAKxB,YAAL,CAAoB,MAAKA,YAAL,CAAkByB,IAAlB,+BAApB,CACA,MAAKjB,oBAAL,CAA4B,MAAKA,oBAAL,CAA0BiB,IAA1B,+BAA5B,CArBe,aAwBlB,C,oDAsBD,6BAAqB,iBACjBC,OAAO,CAACC,GAAR,CAAY,iCAAZ,EACA,GAAIC,CAAAA,IAAI,CAAG,GAAIjC,CAAAA,mBAAJ,EAAX,CAEAiC,IAAI,CAACC,cAAL,CAAoB,KAAK1B,KAAL,CAAWD,KAAX,CAAiBc,IAArC,CAA0C,KAAKb,KAAL,CAAWD,KAAX,CAAiBE,UAA3D,EAAuE0B,IAAvE,CAA4E,SAAAC,QAAQ,CAAI,CAEpF;AACZ;AACA;AACA,cACW,GAAIP,CAAAA,WAAW,kBAAO,MAAI,CAACrB,KAAL,CAAWqB,WAAlB,CAAf,CACA,GAAIQ,CAAAA,YAAY,CAAG,EAAnB,CAGC;AACDD,QAAQ,CAACE,GAAT,CAAa,SAACC,cAAD,CAAgBC,KAAhB,CAA0B,CAClC;AACDH,YAAY,CAACI,IAAb,CAAkBF,cAAc,CAACG,IAAf,EAAlB,EAEF,CAJF,EAII;AACHC,OAAO,CAACC,GAAR,CAAYP,YAAZ,EAA0BF,IAA1B,CAA+B,SAACU,MAAD,CAAY,CACvC;AACA;AAEA;AACL,GAAIC,CAAAA,SAAS,CAAGD,MAAM,CAACP,GAAP,CAAW,SAAAS,UAAU,CAAI,CACxB,GAAIC,CAAAA,SAAS,CAAG,CAAhB,CACA,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACAF,UAAU,CAACvB,KAAX,CAAiBc,GAAjB,CAAqB,SAAAY,IAAI,CAAI,CACzBF,SAAS,EAAEE,IAAI,CAAC1B,KAAhB,CACAyB,IAAI,CAACC,IAAI,CAACpC,QAAV,CACH,CAHD,EAIA,MAAQ,CAACmC,IAAI,CAAJA,IAAD,CAAMD,SAAS,CAATA,SAAN,CAAR,CACP,CARM,CAAhB,CASKF,SAAS,CAACK,IAAV,CAAe,SAACC,CAAD,CAAGC,CAAH,QAASA,CAAAA,CAAC,CAACL,SAAF,CAAcI,CAAC,CAACJ,SAAzB,EAAf,EAAmDV,GAAnD,CAAuD,SAACY,IAAD,CAAMV,KAAN,CAAgB,CACnET,OAAO,CAACuB,KAAR,CAAcd,KAAK,CAAC,CAApB,CAAsBU,IAAtB,EACH,CAFD,EAIArB,WAAW,CAAGiB,SAAd,CACA,MAAI,CAAClC,QAAL,CAAc,CAACiB,WAAW,CAAXA,WAAD,CAAd,EACH,CApBD,EAsBP,CAtCG,EAwCH,C,iCACD,4BAAoB,iBAChBE,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAEA;AAEA,GAAIC,CAAAA,IAAI,CAAG,GAAIjC,CAAAA,mBAAJ,EAAX,CACAiC,IAAI,CAACsB,OAAL,CAAa,KAAK/C,KAAL,CAAWD,KAAX,CAAiBO,QAA9B,CAAuC,KAAKN,KAAL,CAAWD,KAAX,CAAiBc,IAAxD,CAA6D,KAAKb,KAAL,CAAWD,KAAX,CAAiBE,UAA9E,EAA0F0B,IAA1F,CAA+F,SAACe,IAAD,CAAU,CACrG,GAAK3B,CAAAA,SAAL,CAAkC2B,IAAlC,CAAK3B,SAAL,CAAeI,QAAf,CAAkCuB,IAAlC,CAAevB,QAAf,CAAwB6B,MAAxB,CAAkCN,IAAlC,CAAwBM,MAAxB,CACI,GAAIlC,CAAAA,WAAW,kBAAO,MAAI,CAACd,KAAL,CAAWc,WAAlB,CAAf,CAEA,GAAIC,SAAS,CAACC,KAAV,CAAgB,CAAhB,IAAuBiC,SAA3B,CAAsC,CAClCnC,WAAW,CAACC,SAAZ,CAAwBA,SAAS,CAACC,KAAV,CAAgB,CAAhB,CAAxB,CAEH,CACDF,WAAW,CAACK,QAAZ,CAAuBA,QAAvB,CACAL,WAAW,CAACM,OAAZ,CAAsB4B,MAAtB,CACA,MAAI,CAAC5C,QAAL,CAAc,CAACU,WAAW,CAAXA,WAAD,CAAd,EAEA;AACP,CAbD,EAeA;AACH,C,oCAED,+BAAuB,CACnBS,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACH,C,kCAED,4BAAmB0B,SAAnB,CAA6BC,SAA7B,CAAwC,iBACpC5B,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAGA,GAAIC,CAAAA,IAAI,CAAG,GAAIjC,CAAAA,mBAAJ,EAAX,CACAiC,IAAI,CAACsB,OAAL,CAAa,KAAK/C,KAAL,CAAWD,KAAX,CAAiBO,QAA9B,CAAuC,KAAKN,KAAL,CAAWD,KAAX,CAAiBc,IAAxD,CAA6D,KAAKb,KAAL,CAAWD,KAAX,CAAiBE,UAA9E,EAA0F0B,IAA1F,CAA+F,SAACe,IAAD,CAAU,CAErG;AACA;AACA,GAAG,CAACU,MAAM,CAACC,EAAP,CAAUF,SAAS,CAACpD,KAApB,CAA0B,MAAI,CAACC,KAAL,CAAWD,KAArC,CAAJ,CAAiD,CAC7C,GAAKgB,CAAAA,SAAL,CAAkC2B,IAAlC,CAAK3B,SAAL,CAAeI,QAAf,CAAkCuB,IAAlC,CAAevB,QAAf,CAAwB6B,MAAxB,CAAkCN,IAAlC,CAAwBM,MAAxB,CACA,GAAIlC,CAAAA,WAAW,kBAAO,MAAI,CAACd,KAAL,CAAWc,WAAlB,CAAf,CAEA,GAAIC,SAAS,CAACC,KAAV,CAAgB,CAAhB,IAAuBiC,SAA3B,CAAsC,CAClCnC,WAAW,CAACC,SAAZ,CAAwBA,SAAS,CAACC,KAAV,CAAgB,CAAhB,CAAxB,CACA,iEACA,GAAI,MAAI,CAAChB,KAAL,CAAWD,KAAX,CAAiBE,UAAjB,GAAgC,QAAhC,EAA4C,MAAI,CAACD,KAAL,CAAWD,KAAX,CAAiBE,UAAjB,GAAgC,SAAhF,CAA2F,CACvF,GAAIqD,CAAAA,GAAG,CAAG,CAAV,CACAvC,SAAS,CAACC,KAAV,CAAgBc,GAAhB,CAAoB,SAAAyB,GAAG,CAAI,CACvBD,GAAG,EAAIC,GAAG,CAACvC,KAAX,CACH,CAFD,EAGAF,WAAW,CAACC,SAAZ,CAAsBC,KAAtB,CAA8BsC,GAA9B,CACA/B,OAAO,CAACC,GAAR,CAAY8B,GAAZ,EACH,CACJ,CAXD,IAWO,CACHxC,WAAW,CAACC,SAAZ,CAAsBC,KAAtB,CACAF,WAAW,CAACC,SAAZ,CAAsBE,gBAAtB,CACAH,WAAW,CAACC,SAAZ,CAAsBG,WAAtB,CACAJ,WAAW,CAACC,SAAZ,CAAsBT,QAAtB,CAAiC,qBAHjC,CAIH,CACDQ,WAAW,CAACK,QAAZ,CAAuBA,QAAvB,CACAL,WAAW,CAACM,OAAZ,CAAsB4B,MAAtB,CACA,MAAI,CAAC5C,QAAL,CAAc,CAACU,WAAW,CAAXA,WAAD,CAAd,EACH,CACJ,CA7BD,EAiCAW,IAAI,CAACC,cAAL,CAAoB,KAAK1B,KAAL,CAAWD,KAAX,CAAiBc,IAArC,CAA0C,KAAKb,KAAL,CAAWD,KAAX,CAAiBE,UAA3D,EAAuE0B,IAAvE,CAA4E,SAAAC,QAAQ,CAAI,CAEpF,GAAG,CAACwB,MAAM,CAACC,EAAP,CAAUF,SAAS,CAACpD,KAApB,CAA0B,MAAI,CAACC,KAAL,CAAWD,KAArC,CAAJ,CAAiD,CAC7C;AAChB;AACA;AACA,kBAEe,GAAIsB,CAAAA,WAAW,kBAAO,MAAI,CAACrB,KAAL,CAAWqB,WAAlB,CAAf,CACA,GAAIQ,CAAAA,YAAY,CAAG,EAAnB,CAGC;AACDD,QAAQ,CAACE,GAAT,CAAa,SAACC,cAAD,CAAgBC,KAAhB,CAA0B,CAClC;AACDH,YAAY,CAACI,IAAb,CAAkBF,cAAc,CAACG,IAAf,EAAlB,EAEF,CAJF,EAII;AACHC,OAAO,CAACC,GAAR,CAAYP,YAAZ,EAA0BF,IAA1B,CAA+B,SAACU,MAAD,CAAY,CACvC;AACA;AAEA;AACL,GAAIC,CAAAA,SAAS,CAAGD,MAAM,CAACP,GAAP,CAAW,SAAAS,UAAU,CAAI,CACxB,GAAIC,CAAAA,SAAS,CAAG,CAAhB,CACA,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACAF,UAAU,CAACvB,KAAX,CAAiBc,GAAjB,CAAqB,SAAAY,IAAI,CAAI,CACzBF,SAAS,EAAEE,IAAI,CAAC1B,KAAhB,CACAyB,IAAI,CAACC,IAAI,CAACpC,QAAV,CACH,CAHD,EAIA,MAAQ,CAACmC,IAAI,CAAJA,IAAD,CAAMD,SAAS,CAATA,SAAN,CAAR,CACP,CARM,CAAhB,CASKF,SAAS,CAACK,IAAV,CAAe,SAACC,CAAD,CAAGC,CAAH,QAASA,CAAAA,CAAC,CAACL,SAAF,CAAcI,CAAC,CAACJ,SAAzB,EAAf,EAAmDV,GAAnD,CAAuD,SAACY,IAAD,CAAMV,KAAN,CAAgB,CACnE;AACH,CAFD,EAIAX,WAAW,CAAGiB,SAAd,CACA,MAAI,CAAClC,QAAL,CAAc,CAACiB,WAAW,CAAXA,WAAD,CAAd,EACH,CApBD,EAwBH,CACJ,CA3CD,EA4CH,C,sBAED,iBAAS,iBAGL,mBACI,YAAK,SAAS,CAAC,8BAAf,uBAEI,aAAK,SAAS,CAAC,sBAAf,CAAsC,KAAK,CAAE,CAACmC,QAAQ,CAAE,MAAX,CAA7C,wBAEI,YAAK,SAAS,CAAC,+FAAf,uBACI,aAAK,SAAS,CAAC,4BAAf,CAA4C,KAAK,CAAE,CAACC,eAAe,CAAC,SAAjB,CAAnD,wBACA,WAAI,SAAS,CAAC,kBAAd,2BADA,cAIA,MAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,wBACI,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACA,KAAC,SAAD,EAAW,SAAS,CAAC,QAArB,gCADA,cAEI,MAAC,YAAD,EACA,KAAK,CAAE,KAAKzD,KAAL,CAAWD,KAAX,CAAiBO,QADxB,CAEA,QAAQ,CAAE,KAAKD,oBAFf,CAGA,UAAU,CAAE,CAACoC,IAAI,CAAE,UAAP,CAHZ,wBAKA,eAAQ,KAAK,CAAC,SAAd,qBALA,cAMA,eAAQ,KAAK,CAAC,kBAAd,8BANA,cAOA,eAAQ,KAAK,CAAC,UAAd,sBAPA,cAQA,eAAQ,KAAK,CAAC,eAAd,2BARA,cASA,eAAQ,KAAK,CAAC,4BAAd,uCATA,cAUA,eAAQ,KAAK,CAAC,uBAAd,mCAVA,cAWA,eAAQ,KAAK,CAAC,aAAd,yBAXA,cAYA,eAAQ,KAAK,CAAC,SAAd,qBAZA,cAaA,eAAQ,KAAK,CAAC,SAAd,qBAbA,cAcA,eAAQ,KAAK,CAAC,KAAd,kCAdA,cAeA,eAAQ,KAAK,CAAC,QAAd,oBAfA,cAgBA,eAAQ,KAAK,CAAC,cAAd,0BAhBA,cAiBA,eAAQ,KAAK,CAAC,OAAd,mBAjBA,GAFJ,GADJ,cAwBI,MAAC,SAAD,EAAW,SAAS,CAAC,UAArB,wBACI,KAAC,SAAD,EAAW,SAAS,CAAC,QAArB,oBADJ,cAEQ,MAAC,UAAD,EAAY,YAAY,CAAC,OAAzB,CAAiC,KAAK,CAAE,KAAKzC,KAAL,CAAWC,UAAnD,CAA+D,QAAQ,CAAE,KAAKJ,YAA9E,CAA4F,SAAS,CAAC,8CAAtG,wBACI,KAAC,gBAAD,EAAmB,KAAK,CAAC,OAAzB,CAAiC,OAAO,cAAE,KAAC,KAAD,EAAO,KAAK,CAAC,SAAb,EAA1C,CAAqE,KAAK,CAAC,OAA3E,EADJ,cAEI,KAAC,gBAAD,EAAmB,KAAK,CAAC,QAAzB,CAAkC,OAAO,cAAE,KAAC,KAAD,EAAO,KAAK,CAAC,SAAb,EAA3C,CAAsE,KAAK,CAAC,QAA5E,EAFJ,cAGI,KAAC,gBAAD,EAAmB,KAAK,CAAC,SAAzB,CAAmC,OAAO,cAAE,KAAC,KAAD,EAAO,KAAK,CAAC,SAAb,EAA5C,CAAuE,KAAK,CAAC,SAA7E,EAHJ,GAFR,GAxBJ,cAkCI,KAAC,SAAD,EAAW,SAAS,CAAC,KAArB,uBAeE,KAAC,uBAAD,EAAyB,KAAK,CAAER,WAAhC,uBACE,KAAC,UAAD,EACA,OAAO,CAAC,QADR,CAEA,KAAK,CAAC,MAFN,CAGA,KAAK,CAAE,KAAKW,KAAL,CAAWD,KAAX,CAAiBc,IAHxB,CAIA,QAAQ,CAAE,kBAAC6C,MAAD,CAAY,CAClB,GAAI3D,CAAAA,KAAK,kBAAO,MAAI,CAACC,KAAL,CAAWD,KAAlB,CAAT,CACAA,KAAK,CAACc,IAAN,CAAanB,MAAM,CAACgE,MAAD,CAAN,CAAeC,MAAf,CAAsB,YAAtB,CAAb,CACA,MAAI,CAACvD,QAAL,CAAc,CAACL,KAAK,CAALA,KAAD,CAAd,EACH,CARD,EADF,EAfF,EAlCJ,GAJA,GADJ,EAFJ,cAgFI,YAAK,SAAS,CAAC,6FAAf,uBAGI,YAAK,SAAS,CAAC,8DAAf,CAA8E,KAAK,CAAE,CAAC0D,eAAe,CAAC,SAAjB,CAArF,uBAEI,aAAK,SAAS,CAAC,gCAAf,wBACI,YAAK,SAAS,CAAC,gDAAf,uBACI,YAAK,SAAS,CAAC,uFAAf,uBACI,KAAC,mBAAD,EACA,KAAK,CAAE,KAAKzD,KAAL,CAAWD,KADlB,CAEA,WAAW,CAAE,KAAKC,KAAL,CAAWqB,WAFxB,EADJ,EADJ,EADJ,cASI,YAAK,SAAS,CAAC,4EAAf,uBAEI,aAAK,SAAS,CAAC,mCAAf,wBACA,WAAI,SAAS,CAAC,SAAd,UAAyB,KAAKrB,KAAL,CAAWc,WAAX,CAAuBK,QAAvB,CAAgCsB,IAAzD,EADA,cAEA,oBAAK,KAAKzC,KAAL,CAAWc,WAAX,CAAuBM,OAA5B,EAFA,cAGA,sBAAK,KAAKpB,KAAL,CAAWD,KAAX,CAAiBE,UAAtB,aAA2C,KAAKD,KAAL,CAAWc,WAAX,CAAuBC,SAAvB,CAAiCC,KAA5E,GAHA,GAFJ,EATJ,GAFJ,EAHJ,EAhFJ,GAFJ,EADJ,CA8HH,C,mBA/UenC,S,EAmVpB,cAAec,CAAAA,KAAf","sourcesContent":["import {Component} from 'react';\nimport './super.css';\nimport {FormControl,FormLabel,FormGroup,FormControlLabel,RadioGroup,Radio,NativeSelect} from '@material-ui/core';\nimport MomentUtils from '@date-io/moment';\nimport {MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\nimport ProvinceInformation from './classes/ProvinceInformation';\nimport ProvinceLeaderboard from './components/ProvinceLeaderboard';\nimport moment from 'moment';\nclass Super extends Component {\n   \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            board:  {    option_one: 'daily',\n                         province:'alberta',\n                         date:this.goToYesterday(new Date())\n                },\n            information: {\n                covidInfo : {\n                    cases: 'not avaiable yet...',\n                    cumulative_cases: 'not avaiable yet...',\n                    date_report: 'not avaiable yet...',\n                    province: 'not avaiable yet...'\n                },\n                provInfo: ''   ,\n                retDate: '',\n            },\n            leaderboard:[],\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleProvinceChange = this.handleProvinceChange.bind(this);\n     \n\n    }\n    \n    handleChange = e => {\n        let board = {...this.state.board};\n        board.option_one = e.target.value;\n        this.setState({board});\n    }\n    handleProvinceChange = e => {\n        // const name = e.target.name;     \n        let board = {...this.state.board};\n        board.province =  e.target.value;\n        this.setState({board});\n    }\n\n    goToYesterday = (today) => {\n\n        let yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n        return yesterday;\n    }\n\n \n    componentWillMount() {\n        console.log('i will be invoked before render');\n        let foo2 = new ProvinceInformation();\n    \n        foo2.getLeaderboard(this.state.board.date,this.state.board.option_one).then(response => {\n   \n            /*\n            x is an array of responses to be fetched..\n            pipe the response to be json object so I can extract data..\n            */          \n           let leaderboard = {...this.state.leaderboard};\n           var promiseArray = [];\n\n         \n            // an array of responses\n           response.map((responseObject,index) => {\n                //  push all the promises to an array and then consume it using promise.all  \n               promiseArray.push(responseObject.json());\n              \n            }) // end of response.map\n            Promise.all(promiseArray).then((values) => {\n                // values is an object array (based of all territories/provinces ON daily,weekly, and monthly)\n                // each object element will contain an array of cases based ON daily, weekly, and monthly\n                \n                // array of data objects depending on daily. weekly and mponthly\n           var provArray = values.map(dataObject => {\n                            let cases_sum = 0;\n                            let name = '';\n                            dataObject.cases.map(data => {\n                                cases_sum+=data.cases;\n                                name=data.province;\n                            })\n                            return ({name,cases_sum});\n                    })\n                provArray.sort((a,b) => b.cases_sum - a.cases_sum).map((data,index) => {\n                    console.table(index+1,data);\n                });\n\n                leaderboard = provArray;\n                this.setState({leaderboard});\n            })\n  \n    }); \n\n    }\n    componentDidMount() {\n        console.log('Super mounted.');\n\n        // have a onMount date format for render visual \n        \n        let foo2 = new ProvinceInformation();\n        foo2.getData(this.state.board.province,this.state.board.date,this.state.board.option_one).then((data) => {\n            let {covidInfo,provInfo,myDate} = data;\n                let information = {...this.state.information};\n\n                if (covidInfo.cases[0] !== undefined) {\n                    information.covidInfo = covidInfo.cases[0];\n               \n                }\n                information.provInfo = provInfo;\n                information.retDate = myDate;\n                this.setState({information});\n\n                // get initial date format    \n        });\n\n        // get leaderboard.. first mount\n    }\n\n    componentWillUnmount() {\n        console.log('Super unmounted.');\n    }\n\n    componentDidUpdate(prevProps,prevState) { \n        console.log('Super updated.');\n\n\n        let foo2 = new ProvinceInformation();\n        foo2.getData(this.state.board.province,this.state.board.date,this.state.board.option_one).then((data) => {\n         \n            // if prev state board not the same as current\n            // => no changes are occuring unless there is!\n            if(!Object.is(prevState.board,this.state.board)) {\n                let {covidInfo,provInfo,myDate} = data;\n                let information = {...this.state.information};\n                \n                if (covidInfo.cases[0] !== undefined) {\n                    information.covidInfo = covidInfo.cases[0];\n                    /*map through array of cases if weekly / monthly then sum it up*/\n                    if (this.state.board.option_one === \"weekly\" || this.state.board.option_one === \"monthly\") {\n                        let sum = 0;\n                        covidInfo.cases.map(obj => {\n                            sum += obj.cases;\n                        })\n                        information.covidInfo.cases = sum;\n                        console.log(sum);\n                    }\n                } else {\n                    information.covidInfo.cases = \n                    information.covidInfo.cumulative_cases = \n                    information.covidInfo.date_report =\n                    information.covidInfo.province = \"not avaiable yet...\";\n                }\n                information.provInfo = provInfo;\n                information.retDate = myDate;\n                this.setState({information});         \n            }\n        });\n       \n\n\n        foo2.getLeaderboard(this.state.board.date,this.state.board.option_one).then(response => {\n\n            if(!Object.is(prevState.board,this.state.board)) {\n                /*\n                x is an array of responses to be fetched..\n                pipe the response to be json object so I can extract data..\n                */          \n       \n               let leaderboard = {...this.state.leaderboard};\n               var promiseArray = [];\n\n             \n                // an array of responses\n               response.map((responseObject,index) => {\n                    //  push all the promises to an array and then consume it using promise.all  \n                   promiseArray.push(responseObject.json());\n                  \n                }) // end of response.map\n                Promise.all(promiseArray).then((values) => {\n                    // values is an object array (based of all territories/provinces ON daily,weekly, and monthly)\n                    // each object element will contain an array of cases based ON daily, weekly, and monthly\n                    \n                    // array of data objects depending on daily. weekly and mponthly\n               var provArray = values.map(dataObject => {\n                                let cases_sum = 0;\n                                let name = '';\n                                dataObject.cases.map(data => {\n                                    cases_sum+=data.cases;\n                                    name=data.province;\n                                })\n                                return ({name,cases_sum});\n                        })\n                    provArray.sort((a,b) => b.cases_sum - a.cases_sum).map((data,index) => {\n                        // console.table(index+1,data);\n                    });\n\n                    leaderboard = provArray;\n                    this.setState({leaderboard});\n                })\n      \n          \n    \n            }\n        }); \n    }\n\n    render() {\n        \n  \n        return (\n            <div className=\"mainContainer containerFluid\">\n            {/* <Navigation/> */}\n                <div className=\"row no-gutters h-100\" style={{overflow: 'auto'}}>\n\n                    <div className=\"col-0  col-xl-3 d-flex flex-column align-items-center justify-content-center first-column p-5\">\n                        <div className=\"dashboard  w-100 h-75 card\" style={{backgroundColor:'#6C8AD7'}}>\n                        <h2 className=\"mt-5 text-center\">Control Board</h2>\n\n\n                        <FormControl component=\"fieldset\">\n                            <FormGroup className=\"mt-5\">\n                            <FormLabel component=\"legend\">Province/Territory</FormLabel>\n                                <NativeSelect\n                                value={this.state.board.province}\n                                onChange={this.handleProvinceChange}        \n                                inputProps={{name: 'province'}}\n                                >\n                                <option value=\"alberta\">Alberta</option>\n                                <option value=\"british-columbia\">British Columbia</option>\n                                <option value=\"manitoba\">Manitoba</option>\n                                <option value=\"new-brunswick\">New Brunswick</option>\n                                <option value=\"new-foundland-and-labrador\">Newfoundland and Labrador</option>\n                                <option value=\"northwest-territories\">Northwest Territories</option>\n                                <option value=\"nova-scotia\">Nova Scotia</option>\n                                <option value=\"nunavut\">Nunavut</option>\n                                <option value=\"ontario\">Ontario</option>\n                                <option value=\"pei\">Prince Edward Island</option>\n                                <option value=\"quebec\">Quebec</option>\n                                <option value=\"saskatchewan\">Saskatchewan</option>\n                                <option value=\"yukon\">Yukon</option>\n                                </NativeSelect>\n                            </FormGroup>\n                          \n                            <FormGroup className=\"mt-5 p-1\">\n                                <FormLabel component=\"legend\">Option</FormLabel>\n                                    <RadioGroup defaultValue=\"daily\" value={this.state.option_one} onChange={this.handleChange} className=\"w-100 d-flex flex-row justify-content-center\">\n                                        <FormControlLabel  value=\"daily\" control={<Radio color=\"primary\" />} label=\"Daily\" />\n                                        <FormControlLabel  value=\"weekly\" control={<Radio color=\"primary\" />} label=\"Weekly\" />\n                                        <FormControlLabel  value=\"monthly\" control={<Radio color=\"primary\" />} label=\"Monthly\" />\n                                    </RadioGroup>\n                            </FormGroup>\n\n\n                            <FormGroup className=\"p-1\">\n\n                                {/* <Typography id=\"discrete-slider\" gutterBottom>\n                                Month \n                                </Typography>\n                                <Slider\n                                    className=\"mx-auto w-75\"\n                                    defaultValue={1}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={1}\n                                    min={1}\n                                    max={12}\n                                /> */}\n                              \n                              <MuiPickersUtilsProvider utils={MomentUtils}>\n                                <DatePicker\n                                variant=\"inline\"\n                                label=\"Date\"\n                                value={this.state.board.date}\n                                onChange={(newVal) => {\n                                    let board = {...this.state.board};\n                                    board.date = moment(newVal).format('YYYY-MM-DD');\n                                    this.setState({board});\n                                }}/>\n                              </MuiPickersUtilsProvider>\n                         \n                  \n                            </FormGroup>\n\n\n\n                        </FormControl>\n                     \n                        \n                   \n                       \n                        </div>\n                    </div>\n                    <div className=\"col-12 col-xl-9  d-flex flex-column align-items-center justify-content-center second-column\">\n                      \n                        {/* <h2 className=\"bg-info card p-1 text-center\">CANADA COVID19 TRACKER</h2> */}\n                        <div className=\"mapContainer d-flex flex-column align-items-center card mb-2\" style={{backgroundColor:'#6C8AD7'}}>\n\n                            <div className=\"row no-gutters h-100 w-100 p-3\">\n                                <div className=\"col-md-3 d-flex flex-column align-items-center\">\n                                    <div className=\"h-100 w-100 card leaderboardWrapper text-center d-flex flex-column align-items-center\">\n                                        <ProvinceLeaderboard\n                                        board={this.state.board}\n                                        leaderboard={this.state.leaderboard}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-9 p-3 d-flex flex-column  align-items-center justify-content-center\">\n\n                                    <div className=\"p-5 text-center card covidWrapper\">\n                                    <h1 className=\"display\">{this.state.information.provInfo.name}</h1>\n                                    <h2>{this.state.information.retDate}</h2>\n                                    <h2>{this.state.board.option_one} cases:  {this.state.information.covidInfo.cases}</h2>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        \n                            \n                      \n                        {/* MAP */}      \n                        </div>\n                  \n                        \n                    </div>\n\n                    {/* <div className=\"col-xl-2 p-2 d-flex flex-column align-items-center justify-content-start\">\n                   \n                   \n                        <div className=\"leaderboard h-100 w-100 d-flex flex-column align-items-center\" style={{backgroundColor:'#6C8AD7'}}><h2>leaderboard highest to lowest</h2></div>\n                       \n                    </div>                                  */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Super;\n"]},"metadata":{},"sourceType":"module"}