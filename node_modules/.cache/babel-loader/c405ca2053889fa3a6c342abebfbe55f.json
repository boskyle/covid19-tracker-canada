{"ast":null,"code":"var _jsxFileName = \"/srv/http/boskyle.com/public_html/projects/covid19-tracker-canada/src/components/Super/Super.js\";\nimport { Component } from 'react';\nimport './super.css';\nimport { FormControl, FormLabel, FormGroup, FormControlLabel, RadioGroup, Radio, NativeSelect } from '@material-ui/core';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport ProvinceInformation from './classes/ProvinceInformation';\nimport ProvinceLeaderboard from './components/ProvinceLeaderboard';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Super extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let board = { ...this.state.board\n      };\n      board.option_one = e.target.value;\n      this.setState({\n        board\n      });\n    };\n\n    this.handleProvinceChange = e => {\n      // const name = e.target.name;     \n      let board = { ...this.state.board\n      };\n      board.province = e.target.value;\n      this.setState({\n        board\n      });\n    };\n\n    this.goToYesterday = today => {\n      let yesterday = new Date(today);\n      yesterday.setDate(yesterday.getDate() - 1);\n      return yesterday;\n    };\n\n    this.state = {\n      board: {\n        option_one: 'daily',\n        province: 'alberta',\n        date: this.goToYesterday(new Date())\n      },\n      information: {\n        covidInfo: {\n          cases: 'not avaiable yet...',\n          cumulative_cases: 'not avaiable yet...',\n          date_report: 'not avaiable yet...',\n          province: 'not avaiable yet...'\n        },\n        provInfo: '',\n        retDate: ''\n      },\n      leaderboard: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleProvinceChange = this.handleProvinceChange.bind(this);\n  }\n\n  componentWillMount() {\n    console.log('i will be invoked before render');\n    let foo2 = new ProvinceInformation();\n    foo2.getLeaderboard(this.state.board.date, this.state.board.option_one).then(response => {\n      /*\n      x is an array of responses to be fetched..\n      pipe the response to be json object so I can extract data..\n      */\n      let leaderboard = { ...this.state.leaderboard\n      };\n      var promiseArray = []; // an array of responses\n\n      response.map((responseObject, index) => {\n        //  push all the promises to an array and then consume it using promise.all  \n        promiseArray.push(responseObject.json());\n      }); // end of response.map\n\n      Promise.all(promiseArray).then(values => {\n        // values is an object array (based of all territories/provinces ON daily,weekly, and monthly)\n        // each object element will contain an array of cases based ON daily, weekly, and monthly\n        // array of data objects depending on daily. weekly and mponthly\n        var provArray = values.map(dataObject => {\n          let cases_sum = 0;\n          let name = '';\n          dataObject.cases.map(data => {\n            cases_sum += data.cases;\n            name = data.province;\n          });\n          return {\n            name,\n            cases_sum\n          };\n        });\n        provArray.sort((a, b) => b.cases_sum - a.cases_sum).map((data, index) => {\n          console.table(index + 1, data);\n        });\n        leaderboard = provArray;\n        this.setState({\n          leaderboard\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log('Super mounted.'); // have a onMount date format for render visual \n\n    let foo2 = new ProvinceInformation();\n    foo2.getData(this.state.board.province, this.state.board.date, this.state.board.option_one).then(data => {\n      let {\n        covidInfo,\n        provInfo,\n        myDate\n      } = data;\n      let information = { ...this.state.information\n      };\n\n      if (covidInfo.cases[0] !== undefined) {\n        information.covidInfo = covidInfo.cases[0];\n      }\n\n      information.provInfo = provInfo;\n      information.retDate = myDate;\n      this.setState({\n        information\n      }); // get initial date format    \n    }); // get leaderboard.. first mount\n  }\n\n  componentWillUnmount() {\n    console.log('Super unmounted.');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('Super updated.');\n    let foo2 = new ProvinceInformation();\n    foo2.getData(this.state.board.province, this.state.board.date, this.state.board.option_one).then(data => {\n      // if prev state board not the same as current\n      // => no changes are occuring unless there is!\n      if (!Object.is(prevState.board, this.state.board)) {\n        let {\n          covidInfo,\n          provInfo,\n          myDate\n        } = data;\n        let information = { ...this.state.information\n        };\n\n        if (covidInfo.cases[0] !== undefined) {\n          information.covidInfo = covidInfo.cases[0];\n          /*map through array of cases if weekly / monthly then sum it up*/\n\n          if (this.state.board.option_one === \"weekly\" || this.state.board.option_one === \"monthly\") {\n            let sum = 0;\n            covidInfo.cases.map(obj => {\n              sum += obj.cases;\n            });\n            information.covidInfo.cases = sum;\n            console.log(sum);\n          }\n        } else {\n          information.covidInfo.cases = information.covidInfo.cumulative_cases = information.covidInfo.date_report = information.covidInfo.province = \"not avaiable yet...\";\n        }\n\n        information.provInfo = provInfo;\n        information.retDate = myDate;\n        this.setState({\n          information\n        });\n      }\n    });\n    foo2.getLeaderboard(this.state.board.date, this.state.board.option_one).then(response => {\n      if (!Object.is(prevState.board, this.state.board)) {\n        /*\n        x is an array of responses to be fetched..\n        pipe the response to be json object so I can extract data..\n        */\n        let leaderboard = { ...this.state.leaderboard\n        };\n        var promiseArray = []; // an array of responses\n\n        response.map((responseObject, index) => {\n          //  push all the promises to an array and then consume it using promise.all  \n          promiseArray.push(responseObject.json());\n        }); // end of response.map\n\n        Promise.all(promiseArray).then(values => {\n          // values is an object array (based of all territories/provinces ON daily,weekly, and monthly)\n          // each object element will contain an array of cases based ON daily, weekly, and monthly\n          // array of data objects depending on daily. weekly and mponthly\n          var provArray = values.map(dataObject => {\n            let cases_sum = 0;\n            let name = '';\n            dataObject.cases.map(data => {\n              cases_sum += data.cases;\n              name = data.province;\n            });\n            return {\n              name,\n              cases_sum\n            };\n          });\n          provArray.sort((a, b) => b.cases_sum - a.cases_sum).map((data, index) => {// console.table(index+1,data);\n          });\n          leaderboard = provArray;\n          this.setState({\n            leaderboard\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer containerFluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row no-gutters h-100\",\n        style: {\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-0  col-xl-3 d-flex flex-column align-items-center justify-content-center first-column p-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard  w-100 h-75 card\",\n            style: {\n              backgroundColor: '#6C8AD7'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"mt-5 text-center\",\n              children: \"Control Board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"mt-5\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: \"Province/Territory\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n                  value: this.state.board.province,\n                  onChange: this.handleProvinceChange,\n                  inputProps: {\n                    name: 'province'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"alberta\",\n                    children: \"Alberta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"british-columbia\",\n                    children: \"British Columbia\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"manitoba\",\n                    children: \"Manitoba\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"new-brunswick\",\n                    children: \"New Brunswick\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"new-foundland-and-labrador\",\n                    children: \"Newfoundland and Labrador\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"northwest-territories\",\n                    children: \"Northwest Territories\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nova-scotia\",\n                    children: \"Nova Scotia\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nunavut\",\n                    children: \"Nunavut\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ontario\",\n                    children: \"Ontario\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pei\",\n                    children: \"Prince Edward Island\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"quebec\",\n                    children: \"Quebec\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"saskatchewan\",\n                    children: \"Saskatchewan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"yukon\",\n                    children: \"Yukon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"mt-5 p-1\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  children: \"Option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  defaultValue: \"daily\",\n                  value: this.state.option_one,\n                  onChange: this.handleChange,\n                  className: \"w-100 d-flex flex-row justify-content-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"daily\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 83\n                    }, this),\n                    label: \"Daily\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"weekly\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 84\n                    }, this),\n                    label: \"Weekly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"monthly\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 85\n                    }, this),\n                    label: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"p-1\",\n                children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                  utils: MomentUtils,\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    variant: \"inline\",\n                    label: \"Date\",\n                    value: this.state.board.date,\n                    onChange: newVal => {\n                      let board = { ...this.state.board\n                      };\n                      board.date = moment(newVal).format('YYYY-MM-DD');\n                      this.setState({\n                        board\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-xl-9  d-flex flex-column align-items-center justify-content-center second-column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mapContainer d-flex flex-column align-items-center card mb-2\",\n            style: {\n              backgroundColor: '#6C8AD7'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row no-gutters h-100 w-100 p-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-3 d-flex flex-column align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-100 w-100 card leaderboardWrapper text-center d-flex flex-column align-items-center\",\n                  children: /*#__PURE__*/_jsxDEV(ProvinceLeaderboard, {\n                    board: this.state.board,\n                    leaderboard: this.state.leaderboard\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-9 p-3 d-flex flex-column  align-items-center justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-5 text-center card covidWrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"display\",\n                    children: this.state.information.provInfo.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: this.state.information.retDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [this.state.board.option_one, \" cases:  \", this.state.information.covidInfo.cases]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Super;","map":{"version":3,"sources":["/srv/http/boskyle.com/public_html/projects/covid19-tracker-canada/src/components/Super/Super.js"],"names":["Component","FormControl","FormLabel","FormGroup","FormControlLabel","RadioGroup","Radio","NativeSelect","MomentUtils","MuiPickersUtilsProvider","DatePicker","ProvinceInformation","ProvinceLeaderboard","moment","Super","constructor","props","handleChange","e","board","state","option_one","target","value","setState","handleProvinceChange","province","goToYesterday","today","yesterday","Date","setDate","getDate","date","information","covidInfo","cases","cumulative_cases","date_report","provInfo","retDate","leaderboard","bind","componentWillMount","console","log","foo2","getLeaderboard","then","response","promiseArray","map","responseObject","index","push","json","Promise","all","values","provArray","dataObject","cases_sum","name","data","sort","a","b","table","componentDidMount","getData","myDate","undefined","componentWillUnmount","componentDidUpdate","prevProps","prevState","Object","is","sum","obj","render","overflow","backgroundColor","newVal","format"],"mappings":"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","sourcesContent":["import {Component} from 'react';\nimport './super.css';\nimport {FormControl,FormLabel,FormGroup,FormControlLabel,RadioGroup,Radio,NativeSelect} from '@material-ui/core';\nimport MomentUtils from '@date-io/moment';\nimport {MuiPickersUtilsProvider,DatePicker} from \"@material-ui/pickers\";\nimport ProvinceInformation from './classes/ProvinceInformation';\nimport ProvinceLeaderboard from './components/ProvinceLeaderboard';\nimport moment from 'moment';\nclass Super extends Component {\n   \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            board:  {    option_one: 'daily',\n                         province:'alberta',\n                         date:this.goToYesterday(new Date())\n                },\n            information: {\n                covidInfo : {\n                    cases: 'not avaiable yet...',\n                    cumulative_cases: 'not avaiable yet...',\n                    date_report: 'not avaiable yet...',\n                    province: 'not avaiable yet...'\n                },\n                provInfo: ''   ,\n                retDate: '',\n            },\n            leaderboard:[],\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleProvinceChange = this.handleProvinceChange.bind(this);\n     \n\n    }\n    \n    handleChange = e => {\n        let board = {...this.state.board};\n        board.option_one = e.target.value;\n        this.setState({board});\n    }\n    handleProvinceChange = e => {\n        // const name = e.target.name;     \n        let board = {...this.state.board};\n        board.province =  e.target.value;\n        this.setState({board});\n    }\n\n    goToYesterday = (today) => {\n\n        let yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n        return yesterday;\n    }\n\n \n    componentWillMount() {\n        console.log('i will be invoked before render');\n        let foo2 = new ProvinceInformation();\n    \n        foo2.getLeaderboard(this.state.board.date,this.state.board.option_one).then(response => {\n   \n            /*\n            x is an array of responses to be fetched..\n            pipe the response to be json object so I can extract data..\n            */          \n           let leaderboard = {...this.state.leaderboard};\n           var promiseArray = [];\n\n         \n            // an array of responses\n           response.map((responseObject,index) => {\n                //  push all the promises to an array and then consume it using promise.all  \n               promiseArray.push(responseObject.json());\n              \n            }) // end of response.map\n            Promise.all(promiseArray).then((values) => {\n                // values is an object array (based of all territories/provinces ON daily,weekly, and monthly)\n                // each object element will contain an array of cases based ON daily, weekly, and monthly\n                \n                // array of data objects depending on daily. weekly and mponthly\n           var provArray = values.map(dataObject => {\n                            let cases_sum = 0;\n                            let name = '';\n                            dataObject.cases.map(data => {\n                                cases_sum+=data.cases;\n                                name=data.province;\n                            })\n                            return ({name,cases_sum});\n                    })\n                provArray.sort((a,b) => b.cases_sum - a.cases_sum).map((data,index) => {\n                    console.table(index+1,data);\n                });\n\n                leaderboard = provArray;\n                this.setState({leaderboard});\n            })\n  \n    }); \n\n    }\n    componentDidMount() {\n        console.log('Super mounted.');\n\n        // have a onMount date format for render visual \n        \n        let foo2 = new ProvinceInformation();\n        foo2.getData(this.state.board.province,this.state.board.date,this.state.board.option_one).then((data) => {\n            let {covidInfo,provInfo,myDate} = data;\n                let information = {...this.state.information};\n\n                if (covidInfo.cases[0] !== undefined) {\n                    information.covidInfo = covidInfo.cases[0];\n               \n                }\n                information.provInfo = provInfo;\n                information.retDate = myDate;\n                this.setState({information});\n\n                // get initial date format    \n        });\n\n        // get leaderboard.. first mount\n    }\n\n    componentWillUnmount() {\n        console.log('Super unmounted.');\n    }\n\n    componentDidUpdate(prevProps,prevState) { \n        console.log('Super updated.');\n\n\n        let foo2 = new ProvinceInformation();\n        foo2.getData(this.state.board.province,this.state.board.date,this.state.board.option_one).then((data) => {\n         \n            // if prev state board not the same as current\n            // => no changes are occuring unless there is!\n            if(!Object.is(prevState.board,this.state.board)) {\n                let {covidInfo,provInfo,myDate} = data;\n                let information = {...this.state.information};\n                \n                if (covidInfo.cases[0] !== undefined) {\n                    information.covidInfo = covidInfo.cases[0];\n                    /*map through array of cases if weekly / monthly then sum it up*/\n                    if (this.state.board.option_one === \"weekly\" || this.state.board.option_one === \"monthly\") {\n                        let sum = 0;\n                        covidInfo.cases.map(obj => {\n                            sum += obj.cases;\n                        })\n                        information.covidInfo.cases = sum;\n                        console.log(sum);\n                    }\n                } else {\n                    information.covidInfo.cases = \n                    information.covidInfo.cumulative_cases = \n                    information.covidInfo.date_report =\n                    information.covidInfo.province = \"not avaiable yet...\";\n                }\n                information.provInfo = provInfo;\n                information.retDate = myDate;\n                this.setState({information});         \n            }\n        });\n       \n\n\n        foo2.getLeaderboard(this.state.board.date,this.state.board.option_one).then(response => {\n\n            if(!Object.is(prevState.board,this.state.board)) {\n                /*\n                x is an array of responses to be fetched..\n                pipe the response to be json object so I can extract data..\n                */          \n       \n               let leaderboard = {...this.state.leaderboard};\n               var promiseArray = [];\n\n             \n                // an array of responses\n               response.map((responseObject,index) => {\n                    //  push all the promises to an array and then consume it using promise.all  \n                   promiseArray.push(responseObject.json());\n                  \n                }) // end of response.map\n                Promise.all(promiseArray).then((values) => {\n                    // values is an object array (based of all territories/provinces ON daily,weekly, and monthly)\n                    // each object element will contain an array of cases based ON daily, weekly, and monthly\n                    \n                    // array of data objects depending on daily. weekly and mponthly\n               var provArray = values.map(dataObject => {\n                                let cases_sum = 0;\n                                let name = '';\n                                dataObject.cases.map(data => {\n                                    cases_sum+=data.cases;\n                                    name=data.province;\n                                })\n                                return ({name,cases_sum});\n                        })\n                    provArray.sort((a,b) => b.cases_sum - a.cases_sum).map((data,index) => {\n                        // console.table(index+1,data);\n                    });\n\n                    leaderboard = provArray;\n                    this.setState({leaderboard});\n                })\n      \n          \n    \n            }\n        }); \n    }\n\n    render() {\n        \n  \n        return (\n            <div className=\"mainContainer containerFluid\">\n            {/* <Navigation/> */}\n                <div className=\"row no-gutters h-100\" style={{overflow: 'auto'}}>\n\n                    <div className=\"col-0  col-xl-3 d-flex flex-column align-items-center justify-content-center first-column p-5\">\n                        <div className=\"dashboard  w-100 h-75 card\" style={{backgroundColor:'#6C8AD7'}}>\n                        <h2 className=\"mt-5 text-center\">Control Board</h2>\n\n\n                        <FormControl component=\"fieldset\">\n                            <FormGroup className=\"mt-5\">\n                            <FormLabel component=\"legend\">Province/Territory</FormLabel>\n                                <NativeSelect\n                                value={this.state.board.province}\n                                onChange={this.handleProvinceChange}        \n                                inputProps={{name: 'province'}}\n                                >\n                                <option value=\"alberta\">Alberta</option>\n                                <option value=\"british-columbia\">British Columbia</option>\n                                <option value=\"manitoba\">Manitoba</option>\n                                <option value=\"new-brunswick\">New Brunswick</option>\n                                <option value=\"new-foundland-and-labrador\">Newfoundland and Labrador</option>\n                                <option value=\"northwest-territories\">Northwest Territories</option>\n                                <option value=\"nova-scotia\">Nova Scotia</option>\n                                <option value=\"nunavut\">Nunavut</option>\n                                <option value=\"ontario\">Ontario</option>\n                                <option value=\"pei\">Prince Edward Island</option>\n                                <option value=\"quebec\">Quebec</option>\n                                <option value=\"saskatchewan\">Saskatchewan</option>\n                                <option value=\"yukon\">Yukon</option>\n                                </NativeSelect>\n                            </FormGroup>\n                          \n                            <FormGroup className=\"mt-5 p-1\">\n                                <FormLabel component=\"legend\">Option</FormLabel>\n                                    <RadioGroup defaultValue=\"daily\" value={this.state.option_one} onChange={this.handleChange} className=\"w-100 d-flex flex-row justify-content-center\">\n                                        <FormControlLabel  value=\"daily\" control={<Radio color=\"primary\" />} label=\"Daily\" />\n                                        <FormControlLabel  value=\"weekly\" control={<Radio color=\"primary\" />} label=\"Weekly\" />\n                                        <FormControlLabel  value=\"monthly\" control={<Radio color=\"primary\" />} label=\"Monthly\" />\n                                    </RadioGroup>\n                            </FormGroup>\n\n\n                            <FormGroup className=\"p-1\">\n\n                                {/* <Typography id=\"discrete-slider\" gutterBottom>\n                                Month \n                                </Typography>\n                                <Slider\n                                    className=\"mx-auto w-75\"\n                                    defaultValue={1}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={1}\n                                    min={1}\n                                    max={12}\n                                /> */}\n                              \n                              <MuiPickersUtilsProvider utils={MomentUtils}>\n                                <DatePicker\n                                variant=\"inline\"\n                                label=\"Date\"\n                                value={this.state.board.date}\n                                onChange={(newVal) => {\n                                    let board = {...this.state.board};\n                                    board.date = moment(newVal).format('YYYY-MM-DD');\n                                    this.setState({board});\n                                }}/>\n                              </MuiPickersUtilsProvider>\n                         \n                  \n                            </FormGroup>\n\n\n\n                        </FormControl>\n                     \n                        \n                   \n                       \n                        </div>\n                    </div>\n                    <div className=\"col-12 col-xl-9  d-flex flex-column align-items-center justify-content-center second-column\">\n                      \n                        {/* <h2 className=\"bg-info card p-1 text-center\">CANADA COVID19 TRACKER</h2> */}\n                        <div className=\"mapContainer d-flex flex-column align-items-center card mb-2\" style={{backgroundColor:'#6C8AD7'}}>\n\n                            <div className=\"row no-gutters h-100 w-100 p-3\">\n                                <div className=\"col-md-3 d-flex flex-column align-items-center\">\n                                    <div className=\"h-100 w-100 card leaderboardWrapper text-center d-flex flex-column align-items-center\">\n                                        <ProvinceLeaderboard\n                                        board={this.state.board}\n                                        leaderboard={this.state.leaderboard}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-9 p-3 d-flex flex-column  align-items-center justify-content-center\">\n\n                                    <div className=\"p-5 text-center card covidWrapper\">\n                                    <h1 className=\"display\">{this.state.information.provInfo.name}</h1>\n                                    <h2>{this.state.information.retDate}</h2>\n                                    <h2>{this.state.board.option_one} cases:  {this.state.information.covidInfo.cases}</h2>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        \n                            \n                      \n                        {/* MAP */}      \n                        </div>\n                  \n                        \n                    </div>\n\n                    {/* <div className=\"col-xl-2 p-2 d-flex flex-column align-items-center justify-content-start\">\n                   \n                   \n                        <div className=\"leaderboard h-100 w-100 d-flex flex-column align-items-center\" style={{backgroundColor:'#6C8AD7'}}><h2>leaderboard highest to lowest</h2></div>\n                       \n                    </div>                                  */}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Super;\n"]},"metadata":{},"sourceType":"module"}